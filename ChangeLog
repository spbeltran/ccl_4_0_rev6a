[06.17.2020]
Version 4.0.6 - BFolse
-------------
CigiOutgoingMsg.cpp Found error when compiling for LINUX
Changed Line 193
  std::memset( &attr, 0, sizeof( attr ) );
To
  memset( &attr, 0, sizeof( attr ) );

Version 4.0.6 - JDauble
-------------
[05.14.2020]
CigiAccelerationCtrlV4.h, GetArtPartID should be returning a Cigi_uint8 instead of a Cigi_uint16
cigiSymbolTextDefV4, increase max text size from 235 to 65528

Version 4.0.5 - Chas
-------------
Replaced current CigiOutgoingMsg.h with version 4.0.2 CigiOutgoingMsg.h
File management/repository issue.

Version 4.0.4 - SDevine
-------------
[11.04.2019]
Add code to resolve conflict processing unknown packets and IG Control (packet id: 0 ).

Version 4.0.4 - Chas
-------------
[12.19.2019]
cigibaseweatherctrl.h
Added Layer ID enumerations

Version 4.0.3 - Chas
-------------
[07.25.2019]

XWeatherCtrl.cpp.cpp
Removed calls to GetTopThickness() and GetBottomThickness()

CigiBaseSignalProcessing.h
Added OnEntityPositionCtrl

CigiIncomingMsg.cpp
Added CigiSignalType::SigEntityPositionCtrl and CigiSignalType::SigAnimationCtrl
to SignalJump()

CigiSession.h
Moved SessionTypeEnum to Public:

Version 4.0.2 - ECatalano
-------------
[05.16.2019]

Changes/Additions:
------------------
Resolved member function errors with the following
CigiBaseSymbolTexturedPolygonDef.cpp
CigiSymbolTexturedCircleDefV4.cpp
CigiSymbolTexturedPolygonDefV4.cpp


Version 4.0.2 - BFolse
-------------
[04.29.2019]

Changes/Additions:
------------------
Added a few lines to help enable threading
CigiOutgoingMsg.cpp
CigiOutgoingMsg.h

Version 4.0.2 - pmis
-------------
[12.17.2018]

Changes/Additions:
------------------
Removed all sub-folders from source and include folders (back to the way they were previosuly).
This was required in order to get the Linux version to build since the Linux Makefile
is auto generated and is not compatible with sub-folders.

EntityCtrl files
 - Moved accessors that are not supported in V4 packet out of base class

CigiSOFV4::Unpack
 - Fixed error in determining if byte swapping is required

CigiIGCtrlV4::Unpack
 - Added missing byte swap check
 - Fixed compiler warning

Cigi*V4::Unpack()
 - Added byte swapping for many of these

CigiTypes_MSVS_Win32.h
 - Moved from include/Version3 to include

CigiSession::RegisterUserPacket()
- Switched PacketID from Cigi_uint8 to Cigi_uint16

CigiBasePacket.h
- Made GetCnvt set ProcID to ProcNone if PacketID is 0. This fixes issue with unset IncomingHandlerTbl and outGoingHandlerTbl entries causing packet to be interpreted as an IGControl packet (0)

CigiEntityCtrlVX.h/.cpp
CigiBaseEntityCtrl.h/.cpp
Fixes required to allow correct version conversion:
- Removed CigiBaseEntityCtrlV3, moved everything into CigiBaseEntityCtrl
- Moved all member variables from CigiEntityCtrlV4 to base class

CigiBaseArtPartCtrl.h/.cpp
CigiArtPartCtrlV4.h
CigiVelocityCtrlV4.h
- Removed ArtPartIDV4 (must now use ArtPartIDV3 instead) to allow correct version conversion
- Removed ShortEntityType and EntityCountry (use EntityType for both instead)

CigiBaseCompCtrl.h
CigiCompCtrlV4.h/.cpp
CigiShortCompCtrlV4.h/.cpp
- Removed CompClassV4 (must now use CompClassV3 instead) to allow correct version conversion

CigiBaseIGCtrl.h/.cpp
CigiIGCtrlV4.h/.cpp
CigiBaseSOF.h/.cpp
CigiSOFV4.h/.cpp
- Removed TimeStampV4 (must now use TimeStampV3 instead) to allow correct version conversion

CigiIGMsgV4.h/.cpp
- Removed Cigi_int8 Msg[65535] from derived class parameter to allow correct version conversion

- CigiIGMsgV3.cpp
Fixed bug in unpack introduced in 4.0.0.

CigiIGMsg*.*
 - Changed Msg member to be STL vector to more efficiently accomodate messages up to 65520 bytes as per CIGI 4 spec

CigiIncomingMsg::RegisterUserPacket
CigiOutgoingMsg::RegisterUserPacket
- Fixed issue carried over from 3.3.3 in these two files that was causing any call to 
  CigiIGSession::RegisterUserPacket() to return error if the packet is not going to be 
  processed due to HostSend or IGSend. Changed this to instead just silently do nothing 
  and return no error.

CigiIncomingMsg.cpp
- Moved byte swap determination into CheckFirstPacket() as we need to know if byte swap 
  is required in order to read PacketSize and Packet ID of the first  packet when receiving Cigi4
- Added byte swap of PacketSize and PacketID
- Fixed GetFirstPacket() and GetNextPacket() to work with Cigi4

CigiCompCtrlV3::GetCnvt
CigiHatHotReqV3::GetCnvt
CigiHatHotRespV3::GetCnvt
CigiHatHotXRespV3::GetCnvt
CigiLosRespV3::GetCnvt
CigiLosXRespV3::GetCnvt
CigiSensorXRespV3::GetCnvt
CigiShortCompCtrlV3::GetCnvt
CigiCompCtrlV2::GetCnvt
CigiHatReqV2::GetCnvt
CigiHatRespV2::GetCnvt
CigiHotReqV2::GetCnvt
CigiHotRespV2::GetCnvt
CigiLosRespV2::GetCnvt
CigiHatHotReqV3_2::GetCnvt
CigiHatHotRespV3_2::GetCnvt
CigiHatHotXRespV3_2::GetCnvt
CigiLosRespV3_2::GetCnvt
CigiLosXRespV3_2::GetCnvt
CigiCompCtrlV1::GetCnvt
CigiHatReqV1::GetCnvt
CigiHatRespV1::GetCnvt
CigiLosRespV1::GetCnvt
- Added Cigi4 conversion

CigiShortComCtrlV3/V3_3/V4.h

In Cigi 2.0 the Component State field of a short component control was 16 bits. In CIGI 3.0 this was
truncated to an 8 bit field in the packet but still maintained as 16 bit in memory. So reading old
Cigi2.0 logs that contained component state values greater than 255 still worked.

In the Cigi 3.3 CCL library the call to GetComponentState was changed to return an 8 bit value which
breaks the ability to convert incomming V2.0 data since values greater than 255 were set to 255.

To fix this changed the call back to returning a 16 bit value.


TrajectoryDef->AccelerationCtrl
RateCtrl->VelocityCtrl
SymbolLineDef->SymbolPolygonDef

These three packet name changes broke the conversion of Cigi < 4 packets if the reader is Cgig4. 
e.g. CigiBaseTrajectoryDef::GetCnvt() function was setting the converted packet ID to CIGI_TRAJECTORY_DEF_PACKET_ID_V3 which ends up making the reader process the wrong type of packet.
To fix:
-Removed the three respective Base types of the new packets.
-Switched the new V4 packets be derived from the old base packets.
-Modified GetCnvt to choose appropriate packet type.


Version 4.0.1 - cjw
-------------
[12.29.2016]

Changes/Additions:
------------------
- Bug fixes.
- x86 and x64
- vc10
- ported all code (test tools) in Testing folder, updated .csv files

Version 4.0.0 - cjw
-------------
[07.29.2015]

Changes/Additions:
------------------
- Initial port to 4.0.0 spec
- vc9
- static and dynamic builds
- backwards compatible down to 1.x
- no longer required to compile all cigi versions

Version 3.3.3
-------------
[02.02.2012]

Changes/Additions:
------------------

- Corrected a bug in CigiOutgoingMsg that was corrupting the send buffer pointer.
  Used a temporary buffer to point to the outgoing buffer.  Then conducts a validity
  check on the buffer.  If it passes, then the outgoing buffer pointer is updated.
- Corrected a bug in CigiIncomingMsg that was not incrementing through each of
  the Event, Signal, and Callback lists.
- Added the const modifier to the GetCompState member function in each of the
  CigiCompCtrlV3.h, the CigiCompCtrlV3_3.h, the CigiShortCompCtrlV3.h, and
  the CigiShortCompCtrlV3_3.h files.


Version 3.3.2
-------------
[12.09.2010]

Changes/Additions:
------------------

- Updated CMakeLists.txt, configure.ac, and Doxyfile to reference the correct
  version number.
- Changed CigiException and CigiExceptions so that the error message is based on
  the basic_string standard container instead of a pointer to a buffer containing
  a C type string.
- Corrected a bug in CigiMessageBuffer calculating the needed size of the message
  buffers.
- Changed CigiOutgoingMsg::ChangeBufferCigiVersion so that it nolonged needs the
  CIGI version number as a parameter.
- Removed the inline modifier from CigiCopy8.
- Changed #include <memory.h> to #include <string.h> in CigiAnimationTable.cpp,
  CigiArtPartCtrlV1 & V2, CigiCollDetSegDefV1 & V2, CigiCollDetSegRespV1 & V2,
  CigiCollDetVolDefV2, CigiCollDetVolRespV2, CigiCompCtrlV1 & V2, CigiEntityCtrlV1,
  CigiEnvCtrlV1 & V2, CigiHatReqV1 & V2, CigiHatRespV1 & V2, CigiHotReqV2,
  CigiHotRespV2, CigiIGCtrlV1 & V2, CigiIGMsgV2, CigiLosRespV1 & V2, CigiLosSegReqV1
  & V2, CigiLosVectReqV1 & V2, CigiRateCtrlV1 & V2, CigiSensorCtrlV1 & V2,
  CigiSensorRespV1 & V2, CigiSOFV1 & V2, CigiSpecEffDefV1 & V2,
  CigiTrajectoryDefV1 & V2, CigiViewCtrlV1 & V2, CigiViewDefV1 & V2,
  and CigiWeatherCtrlV1 & V2.
- Corrected a bug in CigiIO::Recv.  Removed the second MsgIn.AdvanceCrntBuffer call
  This should not have been called.  It should only be called once at the beginning
  of the method.  This was causing one buffer to be filled by the incoming and an
  empty buffer being read.
- Changed CigiOutgoingMsg so that the Database version is not zeroed automatically.
  Also Corrected a few Outgoing version problems.
- Corrected CigiSymbolLineDefV3_3.  CIGI_SYMBOL_LINE_DEFINITION_PACKET_ID_V3_3
  was being used where CIGI_SYMBOL_LINE_DEFINITION_PACKET_SIZE_V3_3 should have
  been used.  It now uses the correct macros.


Version 3.3.1
-------------
[04.27.2009]

Changes/Additions:
------------------

- Corrected a bug in CigiIncomingMsg::AdvanceCrntBuffer discovered by and a patch
  submitted by Christopher Buell.  This bug would not advance the buffer if the
  current buffer pointer was null.
- Corrected a problem with component state.
  In CIGI V1 and V2 the component state is Cigi_uint16.
  In Cigi V3.0 and above the component state is Cigi_uint8.
  Converting between these can and probably will cause problems.
  In addition, the accessors should reflect the correct size of the value per the ICD
- With few files in the examples and Testing, the compilers had problems resolving
  types and overloaded functions.  The types were made more explicit to resolve this problem.


Version 3.3.0
-------------
[12.16.2008]

Changes/Additions:
------------------

- Changed the version numbering system for the CCL to Applicable CIGI major version,
Applicable CIGI minor version, Bug fix version.
- Corrected several bugs.
- Changed CigiTypes header and added a types header for Windows Visual studio and
a header for Linux.  The types header for Linux takes advantage of stdint.h.
- Added the Entity Control and IG Control for CIGI 3.3 which adds smoothing flags.


Version 2.0.0
-------------
[04.04.2008]

Changes/Additions:
------------------

- Added the Symbol Clone Packet.
- Changed the Packet IDs for the Symbol Ctrl and Short Symbol Ctrl packets.


Version 2.0.0
-------------
[03.11.2008]

Changes/Additions:
------------------

- Changed the method of conversion.
- Removed the Version Jump Table.
- Added the symbology packets.
- Changed the examples.
- Added Testing programs.


Version 1.7.5
-------------
[04.25.2007]

Changes/Additions:
------------------

- Corrected a problem with Database request number adjustment.
  Changed V1 & V2 LOS requests to request extended responses if they are
  converted to V3.
  Changed the CigiHotReqV2 constructor to correctly set the request type to HOT
  instead of HAT.
  Corrected V3 & V3.2 SOF to correctly unpack the timestamp value.
  Removed the SetReqTyp member function from CigiHatHotXRespV3 & V3_2, because
  V3 and V3.2 does not have that parameter in the packet.




Version 1.7.4
-------------
[12.06.2006]

Changes/Additions:
------------------

- Corrects a bug with the Version Jump Table that was causing a memory leak.
  Corrected the way V3 Celestial Control and Atmosphere Control flags were
  being set by the V1 and V2 Environmental Control classes.
  Corrected a bug in CigiOutgoingMsg that now correctly zeros out the
  Host database id request under specific conditions.



Version 1.7.3
-------------
[08.11.2006]

Changes/Additions:
------------------

- Corrects a bug with IG Control and SOF that may have put the wrong
  Minor Version number in the CIGI messages.  Corrected the CigiIGCtrlV3_2
  and the CigiSOFV3_2 packing routines so that the Minor Version number is
  is packed from the packing object (a CigiIGCtrlV3_2 or CigiSOFV3_2 object
  when the current outgoing Cigi Version is 3.2) not the object with the
  user filled data.  This will put the correct Minor Version number in the
  Cigi message.




Version 1.7.2
-------------
[07.18.2006]

Changes/Additions:
------------------

- Corrects several problems with the way the CCL has been recently released
  for Unix/Linux.  The CCL will now be released in the .zip format for
  windows and the .tar.gz format for Unix/Linux.

- Corrects several problems in CigiIncomingMsg involving setting the current
  CIGI version were corrected.  Also, corrects the problem with the way the
  IterationVersion is initialized and used in the iteration method of
  incoming message processing.

- In the examples, several errors in the networking code involving a stray
  pointer due to a #define were corrected.  Also in the examples,
  a few errors involving the STL differences between MS6 and MS7 and
  detecting the compiler version were corrected.



Version 1.7.1
-------------
[06.23.2006]

Changes/Additions:
------------------

- Defined new CIGI types Cigi_int8 and Cigi_uint8.

- Replaced use of native char and unsigned char types to use Cigi_int8 and
  Cigi_uint8 instead, to account for systems where char and unsigned char types
  are not 1 byte in size.


Version 1.7.0
-------------
[04.14.2006]

Changes/Additions:
------------------

- Added compatibility with CIGI version 3.2.

- Introduced minor version numbers to the library to handle packet translations
  for CIGI version 3.2.


Version 1.6.0
-------------
[03.02.2006]

Changes/Additions:
------------------

- Added support in the CigiOutgoingMsg class for automatic frame counter
  synchronization with incoming messages. A new set of functions have been
  introduced to handle this: UpdateFrameCntr(), UpdateIGCtrl(), UpdateSOF(),
  PackageMsg(), FreeMsg(), and GetCurrentlyPackagedMsg().

- Modified the CigiMessage class to include a PackagedMsg member variable in
  support of automatic frame counter synchronization.

- Updated the CigiDummyIG example to use the new frame counter synchrnoization
  methods.

- Added the NewCigiMiniHost example to show usage of the new message
  synchronization calls.

Bug Fixes:
------------------

- Fixed the unpacking of the polarity flag in the CigiSensorCtrlV3 packet class.


Version 1.5.7
-------------
[11.08.2005]

Changes/Additions:
------------------

- Added the CigiIODummyIG and CigiIOMiniHost examples, which illustrate use of
  the CigiIO class.

- Added a Recv() function to the CigiIO class for receiving incoming messages
  without immediately processing them.


Version 1.5.6
-------------
[10.06.2005]

Changes/Additions:
------------------

- Added the CigiDummyIG example.

- Added the CigiMiniHost example.

Bug Fixes:
------------------

- Fixed the ProcessIncomingMsg and GetFirstPacket methods to correctly handle
  frame counter synchronization.


Version 1.5.5
-------------
[08.12.2005]

Bug Fixes:
------------------

- Modified the GetFirstPacket method in the CigiIncomingMsg class to get the
  pointer to the correct SOF and IG Control handling objects.


Version 1.5.4
-------------
[07.05.2005]

Bug Fixes:
------------------

- Detects a buffer overrun error condition when processing the incoming message
  buffer, and throws an exception when found.


Version 1.5.3
-------------
[04.26.2005]

Changes/Additions:
------------------

- Added license information to the download.

- Split downloads up into binaries, source, and documentation.


Version 1.5.2
-------------
[04.06.2005]

Bug Fixes:
------------------

- Modified the CigiCopy2 and CigiCopy4 macros to use the cigi-defined data
  types instead of native types.

- Fixed the GetFirstPacket function in the CigiIncomingMsg class to use the
  correct start of frame and IG control opcode values.

- Fixed an error in the RegisterUserPacket function in the CigiVersionJumpTable
  class to properly handle user-defined packets when translating between
  different versions of CIGI.


Version 1.5.1
-------------
[02.09.2005]

Bug Fixes:
------------------

- Added the CIGI_LITTLE_ENDIAN preprocessor definition to the CIGI DLL and LIB
  Visual Studio projects.


Version 1.5
------------
[01.25.2005]

Changes/Additions:
------------------

- Changed the CCL directory structure.

- Added CIGI-defined data types (CigiTypes.h) for easier portability to other
  platforms, particularly 64-bit architectures.

- Created and updated files for building the CCL on Linux platforms, and made
  the CCL files Linux (and UNIX) compatible.

- Created Win32 DLLs for the CCL and a Visual Studio 6.0 project for building
  DLLs.

- Added a common PackPointer union data type to CigiTypes.h for use in the
  packet implementation classes.

Bug Fixes:
------------------

- Fixed a bug in the component and short component controls where data was
  erroneously converted to an unsigned int when it was packed.

- Changed the data type for the database ID to a signed char from unsigned in
  the SOF and IG Control packets.


Version 1.4a
------------
[11.15.2004]

Changes/Additions:
------------------

- Changed the versoning convention from 'Version 3 Release 1.x' to
  'Version 1.x', and removed the Beta status.

- Added a GetValidIGCtrlSOF() accessor function to the CigiMessage class.

- Restructured folders and paths in the package to reflect what is in CVS.

Bug Fixes:
------------------

- Fixed incorrect cases in filenames for non-Windows systems.


v3 Beta 1.4
------------
[07.16.2004]

Changes/Additions:
------------------

- Added examples of CIGI Host and IG applications using the CCL.

Bug Fixes:
------------------

- The global GetMsgBuffer() function was changed to a member function of the
  CigiIncomingMsg class.

- An error in the sprintf() function call was fixed in the overloaded
  constructor for the CigiInvalidUserPacketException class.

- The 'Swap' member variable was changed to 'BSwapEn' in the CigiBaseIGCtrl and
  CigiBaseSOF classes. Constructors and Unpack() member functions were also
  updated to reflect the new variable name.

- The Unpack() method in the CigiSensorCtrlV3 class was fixed to assign the
  correct value of 0x02 to the polarity field.

- The accessor functions were returning the wrong variables and have been fixed
  in the CigiTrajectoryDefV3 class for GetAccelY() and GetAccelZ().

- Fixed an error in the Unpack() method of the CigiViewCtrlV3 class where the
  entity ID was not being swapped.


v3 Beta 1.3
------------
[06.01.2004]

Bug Fixes:
------------------

- Added code to the CigiMessage class destructor to delete memory that has been
  allocated by the class for buffers, counters, and data.


v3 Beta 1.2
------------
[05.10.2004]

Bug Fixes:
------------------

- Fixed a bug where the frame counter was not being updated for CIGI 1 and 2
  messages on little endian machines.


v3 Beta 1.1
------------
[03.30.2004]

Changes/Additions:
------------------

- Added project configurations to the Cigi.dsp project: Win32 DebugMT, Win32
  ReleaseMT, Win32 Debug MT DLL, and Win32 Release MT DLL.

- Added/updated LIB files for each of the configurations in Cigi.dsp (Win32).

- Updated the doxygen HTML class library documentation files.

- Updated the changelog in the users' manual.

Bug Fixes:
------------------

- Added explicit type-casting and explicit type-indicators to variable
  assignment values as needed in the CIGI class library source and header files.


v3 Beta 1
------------
[03.15.2004]

Initial Release.
